from os import remove

from pyrogram import filters
from pyrogram.types import Message

from spr import SUDOERS, arq, spr
from spr.utils.db import (disable_nsfw, disable_spam, enable_nsfw,
                          enable_spam, is_nsfw_enabled,
                          is_spam_enabled)
from spr.utils.misc import admins, get_file_id

__MODULE__ = "‚≠ê ùêåùêöùêßùêöùê†ùêû ‚ö°"
__HELP__ = """
/anti_nsfw [ENABLE|DISABLE] - ·¥á…¥·¥Ä ô ü·¥á ·¥è Ä ·¥Ö…™s·¥Ä ô ü·¥á …¥s“ì·¥° ·¥Ö·¥á·¥õ·¥á·¥Ñ·¥õ…™·¥è…¥...
/anti_spam [ENABLE|DISABLE] - ·¥á…¥·¥Ä ô ü·¥á ·¥è Ä ·¥Ö…™s·¥Ä ô ü·¥á s·¥ò·¥Ä·¥ç ·¥Ö·¥á·¥õ·¥á·¥Ñ·¥õ…™·¥è…¥...

/nsfw_scan - ·¥Ñ ü·¥Äss…™“ì è ·¥Ä ·¥ç·¥á·¥Ö…™·¥Ä.
/spam_scan - …¢·¥á·¥õ s·¥ò·¥Ä·¥ç ·¥ò Ä·¥á·¥Ö…™·¥Ñ·¥õ…™·¥è…¥s ·¥è“ì  Ä·¥á·¥ò ü…™·¥á·¥Ö ·¥ç·¥áss·¥Ä…¢·¥á...
"""


@spr.on_message(
    filters.command("anti_nsfw") & ~filters.private, group=3
)
async def nsfw_toggle_func(_, message: Message):
    if len(message.command) != 2:
        return await message.reply_text(
            "·¥ús·¥Ä…¢·¥á: /anti_nsfw [ENABLE|DISABLE]"
        )
    if message.from_user:
        user = message.from_user
        chat_id = message.chat.id
        if user.id not in SUDOERS and user.id not in (
            await admins(chat_id)
        ):
            return await message.reply_text(
                " è·¥è·¥ú ·¥Ö·¥è…¥'·¥õ  ú·¥Ä·¥†·¥á ·¥á…¥·¥è·¥ú…¢ ú ·¥ò·¥á Ä·¥ç…™ss…™·¥è…¥s..."
            )
    status = message.text.split(None, 1)[1].strip()
    status = status.lower()
    chat_id = message.chat.id
    if status == "enable":
        if is_nsfw_enabled(chat_id):
            return await message.reply("·¥Ä ü Ä·¥á·¥Ä·¥Ö è ·¥á…¥·¥Ä ô ü·¥á·¥Ö...")
        enable_nsfw(chat_id)
        await message.reply_text("·¥á…¥·¥Ä ô ü·¥á·¥Ö …¥s“ì·¥° ·¥Ö·¥á·¥õ·¥á·¥Ñ·¥õ…™·¥è…¥...")
    elif status == "disable":
        if not is_nsfw_enabled(chat_id):
            return await message.reply("·¥Ä ü Ä·¥á·¥Ä·¥Ö è ·¥Ö…™s·¥Ä ô ü·¥á·¥Ö...")
        disable_nsfw(chat_id)
        await message.reply_text("·¥Ö…™s·¥Ä ô ü·¥á·¥Ö …¥s“ì·¥° ·¥Ö·¥á·¥õ·¥á·¥Ñ·¥õ…™·¥è…¥...")
    else:
        await message.reply_text(
            "·¥ú…¥·¥ã…¥·¥è·¥°…¥ s·¥ú“ì“ì…™x, ·¥ús·¥á /anti_nsfw [ENABLE|DISABLE]"
        )


@spr.on_message(
    filters.command("anti_spam") & ~filters.private, group=3
)
async def spam_toggle_func(_, message: Message):
    if len(message.command) != 2:
        return await message.reply_text(
            "·¥ús·¥Ä…¢·¥á: /anti_spam [ENABLE|DISABLE]"
        )
    if message.from_user:
        user = message.from_user
        chat_id = message.chat.id
        if user.id not in SUDOERS and user.id not in (
            await admins(chat_id)
        ):
            return await message.reply_text(
                " è·¥è·¥ú ·¥Ö·¥è…¥'·¥õ  ú·¥Ä·¥†·¥á ·¥á…¥·¥è·¥ú…¢ ú ·¥ò·¥á Ä·¥ç…™ss…™·¥è…¥s..."
            )
    status = message.text.split(None, 1)[1].strip()
    status = status.lower()
    chat_id = message.chat.id
    if status == "enable":
        if is_spam_enabled(chat_id):
            return await message.reply("·¥Ä ü Ä·¥á·¥Ä·¥Ö è ·¥á…¥·¥Ä ô ü·¥á·¥Ö...")
        enable_spam(chat_id)
        await message.reply_text("·¥á…¥·¥Ä ô ü·¥á·¥Ö s·¥ò·¥Ä·¥ç ·¥Ö·¥á·¥õ·¥á·¥Ñ·¥õ…™·¥è…¥...")
    elif status == "disable":
        if not is_spam_enabled(chat_id):
            return await message.reply("·¥Ä ü Ä·¥á·¥Ä·¥Ö è ·¥Ö…™s·¥Ä ô ü·¥á·¥Ö...")
        disable_spam(chat_id)
        await message.reply_text("·¥Ö…™s·¥Ä ô ü·¥á·¥Ö s·¥ò·¥Ä·¥ç ·¥Ö·¥á·¥õ·¥á·¥Ñ·¥õ…™·¥è…¥...")
    else:
        await message.reply_text(
            "·¥ú…¥·¥ã…¥·¥è·¥°…¥ s·¥ú“ì“ì…™x, ·¥ús·¥á /anti_spam [ENABLE|DISABLE]"
        )


@spr.on_message(filters.command("nsfw_scan"), group=3)
async def nsfw_scan_command(_, message: Message):
    err = " Ä·¥á·¥ò ü è ·¥õ·¥è ·¥Ä…¥ …™·¥ç·¥Ä…¢·¥á/·¥Ö·¥è·¥Ñ·¥ú·¥ç·¥á…¥·¥õ/s·¥õ…™·¥Ñ·¥ã·¥á Ä/·¥Ä…¥…™·¥ç·¥Ä·¥õ…™·¥è…¥ ·¥õ·¥è s·¥Ñ·¥Ä…¥ …™·¥õ..."
    if not message.reply_to_message:
        await message.reply_text(err)
        return
    reply = message.reply_to_message
    if (
        not reply.document
        and not reply.photo
        and not reply.sticker
        and not reply.animation
        and not reply.video
    ):
        await message.reply_text(err)
        return
    m = await message.reply_text("s·¥Ñ·¥Ä…¥…¥…™…¥…¢...")
    file_id = get_file_id(reply)
    if not file_id:
        return await m.edit("s·¥è·¥ç·¥á·¥õ ú…™…¥…¢ ·¥°·¥á…¥·¥õ ·¥° Ä·¥è…¥…¢...")
    file = await spr.download_media(file_id)
    try:
        results = await arq.nsfw_scan(file=file)
    except Exception as e:
        return await m.edit(str(e))
    remove(file)
    if not results.ok:
        return await m.edit(results.result)
    results = results.result
    await m.edit(
        f"""
**…¥·¥á·¥ú·¥õ Ä·¥Ä ü:** `{results.neutral} %`
**·¥ò·¥è Ä…¥:** `{results.porn} %`
** ú·¥á…¥·¥õ·¥Ä…™:** `{results.hentai} %`
**s·¥áx è:** `{results.sexy} %`
**·¥Ö Ä·¥Ä·¥°…™…¥…¢s:** `{results.drawings} %`
**…¥s“ì·¥°:** `{results.is_nsfw}`
"""
    )


@spr.on_message(filters.command("spam_scan"), group=3)
async def scanNLP(_, message: Message):
    if not message.reply_to_message:
        return await message.reply(" Ä·¥á·¥ò ü è ·¥õ·¥è ·¥Ä ·¥ç·¥áss·¥Ä…¢·¥á ·¥õ·¥è s·¥Ñ·¥Ä…¥ …™·¥õ...")
    r = message.reply_to_message
    text = r.text or r.caption
    if not text:
        return await message.reply("·¥Ñ·¥Ä…¥'·¥õ s·¥Ñ·¥Ä…¥ ·¥õ ú·¥Ä·¥õ...")
    data = await arq.nlp(text)
    data = data.result[0]
    msg = f"""
**…™s s·¥ò·¥Ä·¥ç:** {data.is_spam}
**s·¥ò·¥Ä·¥ç ·¥ò Ä·¥è ô·¥Ä ô…™ ü…™·¥õ è:** {data.spam_probability} %
**s·¥ò·¥Ä·¥ç:** {data.spam}
** ú·¥Ä·¥ç:** {data.ham}
**·¥ò Ä·¥è“ì·¥Ä…¥…™·¥õ è:** {data.profanity}
"""
    await message.reply(msg, quote=True)
